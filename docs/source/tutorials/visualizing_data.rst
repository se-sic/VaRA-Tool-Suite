Visualizing Data
=================

VaRA-TS allows you to visualize the data generated by experiments in various plots and tables.
This guide explains how plots and tables can be generated via our command line tools.
If you want to write your own plots check :ref:`here <Plots>`.


Generating Plots and Tables
---------------------------

Plots and tables can be generated with the tools :ref:`vara-plot` and :ref:`vara-table`.
The command line interface for these tools consists of four parts:

1. *Common options:* handle functionality common to all plots or tables, like file format
2. *Plot or table config:* for tuning visual appearance; specific plots/tables may or may not respect them
3. *Plot or table name:* name of the concrete plot or table
4. *Plot- or table-specific options*: options specific to a certain plot or table

.. note::

    In the following, we will only write about plots since plots and tables work essentially in the same way.
    For tables, just replace *plot* with *table*.

You can check what plots are available by running ``vara-plot -h``.
The available plot names are listed under the section ``Commands`` in the help output.

.. program-output:: vara-plot -h
    :nostderr:

To see what plot-specific a plot has, you need to look at the help output for that specific plot, e.g.:

.. program-output:: vara-plot pc-overview-plot -h
    :nostderr:

The plot files are stored in ``$VARATS_ROOT/plots``.
You can group plot files into subdirectories using the option ``--plot-dir``, e.g. ``vara-plot --plot-dir=foo pc-overview-plot --report-type=EmptyReport`` will create a file in the directory ``$VARATS_ROOT/plots/foo``.
Note that one call to ``vara-plot`` can generate multiple files depending on the plot.


Using Artefacts to Automate Plot/Table Generation
-------------------------------------------------

:ref:`Artefacts` are a way to persist plot and table configurations (i.e., ``vara-plot`` and ``vara-table`` calls) so that they can be easily (re-) generated.
The artefact specifications are a part of the paper config and therefore, can be easily shared and are useful to reproduce results.

To store a plot or table configuration you simply need to provide a name for the artefact via the option ``--save-artefact``.
The ``vara-plot`` and ``vara-table`` tools will then store the configuration in the current paper config instead of generating the plot or table.
For example, an artefact that will generate a ``pc-overview-plot`` for the current paper config can be added
via::

    vara-plot --save-artefact="PC Overview" pc-overview-plot --report-type=EmptyReport

.. note::

    The double quotes around the artefact name are only needed if the name
    contains spaces or other characters with special meaning.

Artefacts can be managed with the :ref:`vara-art` tool.
For example, to generate all artefacts in the current paper config, you need to run the command ``vara-art generate``.
Artefacts are stored separately from other plots and tables in the directory ``$VARATS_ROOT/artefacts/<paper_config>``.
In addition to the plot and table files, the ``vara-art`` tool generates a html file ``$VARATS_ROOT/artefacts/<paper_config>/index.html`` where all the generated artefacts are listed (and linked).
This file allows to easily browse the generated files.
