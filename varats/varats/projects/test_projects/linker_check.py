"""Small test project to run test compiler functionality."""
import typing as tp

from benchbuild import Project
from benchbuild.utils.cmd import ldd, which

from varats.project.project_util import ProjectBinaryWrapper


class LinkerCheck(Project):  # type: ignore
    """Check if the compiler binary is correctly linked and finds all it dynamic
    libraries."""

    NAME = 'linker_check'
    DOMAIN = 'testing'
    GROUP = 'default_checks'
    VERSION = 'HEAD'

    @property
    def binaries(self) -> tp.List[ProjectBinaryWrapper]:
        """Return a list of binaries generated by the project."""
        return []

    def run_tests(self) -> None:
        pass

    def compile(self) -> None:
        """Compile the project."""
        ldd_check = ldd(which('clang++').strip())
        opt_check = ldd(which('opt').strip())

        clang_missing_libs = [
            x for x in ldd_check.split('\n') if 'not found ' in x
        ]
        opt_missing_libs = [
            x for x in opt_check.split('\n') if 'not found ' in x
        ]

        if clang_missing_libs:
            print("Found missing shared libraries for clang:")
            for lib in clang_missing_libs:
                print(lib)
        else:
            print("clang++ OK")

        if opt_missing_libs:
            print("Found missing shared libraries for opt:")
            for lib in opt_missing_libs:
                print(lib)
        else:
            print("opt     OK")
