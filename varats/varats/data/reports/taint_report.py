"""Module for all reports generated for taint flow analyses."."""

from varats.data.report import BaseReport, FileStatusExtension, MetaReport


class TaintPropagationReport(BaseReport):
    """Print the result of filechecking a llvm ir file generated by VaRA or
    Phasar in a readable manner."""

    SHORTHAND = "TPR"
    FILE_TYPE = "txt"

    @staticmethod
    def get_file_name(
        project_name: str,
        binary_name: str,
        project_version: str,
        project_uuid: str,
        extension_type: FileStatusExtension,
        file_ext: str = ""
    ) -> str:
        """
        Generates a filename for a taint report.

        Args:
            report_shorthand: unique shorthand of the report
            project_name: name of the project for which the report was generated
            binary_name: name of the binary for which the report was generated
            project_version: version of the analyzed project, i.e., commit hash
            project_uuid: benchbuild uuid for the experiment run
            extension_type: to specify the status of the generated report
            file_ext: file extension of the report file

        Returns:
            name for the report file that can later be uniquly identified
        """
        return MetaReport.get_file_name(
            TaintPropagationReport.SHORTHAND, project_name, binary_name,
            project_version, project_uuid, extension_type, file_ext
        )

    def __repr__(self) -> str:
        return self.SHORTHAND + ": " + self.path.name

    def __lt__(self, other: 'TaintPropagationReport') -> bool:
        return self.path < other.path
