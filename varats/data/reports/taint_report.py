"""
Module for all reports generated for taint flow analyses."
"""

import os
from pathlib import Path

from varats.data.report import BaseReport, MetaReport, FileStatusExtension


class TaintPropagationReport(BaseReport):
    """
    Print the result of filechecking a llvm ir file generated by VaRA or Phasar
    in a readable manner.
    """

    SHORTHAND = "TPR"
    FILE_TYPE = "txt"

    def __init__(self, path: Path) -> None:
        super(TaintPropagationReport, self).__init__()
        self.__path = path

    @property
    def path(self) -> Path:
        """
        Path to TaintPropagationReport file.
        """
        return self.__path

    @staticmethod
    def get_file_name(project_name: str,
                      binary_name: str,
                      project_version: str,
                      project_uuid: str,
                      extension_type: FileStatusExtension,
                      file_ext: str = "") -> str:
        """
        Generates a filename for a taint report.
        """
        return MetaReport.get_file_name(TaintPropagationReport.SHORTHAND,
                                        project_name, binary_name,
                                        project_version, project_uuid,
                                        extension_type, file_ext)

    def __repr__(self) -> str:
        return self.SHORTHAND + ": " + os.path.basename(self.path)

    def __lt__(self, other: 'TaintPropagationReport') -> bool:
        return self.path < other.path
